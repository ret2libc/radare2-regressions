NAME=p2 hello-linux-x86_64
FILE=../bins/elf/analysis/hello-linux-x86_64
EXPECT=<<EOF
----..==----##..
--==####..####..
==..##..------==
--==####..####--
==..==##--##==##
..----####--====
==..==..########
##..##==--==##--
EOF
CMDS=<<EOF
p2 16
EOF
RUN

NAME=p= 0xff 0x00
FILE=-
BROKEN=1
EXPECT=<<EOF
         ___________________________________________________
00 00ff | __________________________________________________|
01 0000 ||
EOF
CMDS=<<EOF
b 2
wx 0xff
p= 2@0
EOF
RUN

NAME=p=b 0xff 0x00
FILE=-
EXPECT=<<EOF
0x00000000 00 00ff |'__________________________________________________|
0x00000001 01 0000 ||
EOF
CMDS=<<EOF
b 2
wx 0xff
e zoom.in=raw
p=b 2 2@0
EOF
RUN

NAME=p= - crash
FILE=-
EXPECT=<<EOF
0x00000000 00 0000 ||
EOF
CMDS=<<EOF
e zoom.in = block
p=p" 1 " 1 EN
EOF
RUN

NAME=p=d
FILE=../bins/elf/arm1.bin
EXPECT=<<EOF
min:              0  0x0
max:              127  0x7f
unique (count):   6  0x6
range (max-min):  127  0x7f
size (of block):  10  0xa
EOF
ARGS=-n
CMDS=<<EOF
p=d 10 @ 0
EOF
RUN

NAME=p=e 5
FILE=../bins/elf/arm1.bin
EXPECT=<<EOF
0x00000000 00 009f |'''''''''''''''''''''''''''''''|_______
0x0001bec1 01 00c3 |                                      |
0x00037d82 02 00c3 |                                      |
0x00053c43 03 00c3 |                 ______________________|
0x0006fb04 04 0051 | _______________|
EOF
CMDS=<<EOF
p=e 5@0
EOF
RUN

NAME=p=e 5 0x100
FILE=../bins/elf/arm1.bin
EXPECT=<<EOF
0x00000000 00 007f |''''''''''''''''''''''___|
0x00000033 01 006b |                     |__
0x00000066 02 007a |                      ___|
0x00000099 03 006a |                   __|
0x000000cc 04 005f | __________________|
EOF
ARGS=-n
CMDS=<<EOF
e zoom.in = block
p=e 5 0x100
EOF
RUN

NAME=p=e 5 0x100 1
FILE=../bins/elf/arm1.bin
EXPECT=<<EOF
0x00000000 00 006b |'''''''''''''''''''''|__
0x00000033 01 007a |                      ___|
0x00000066 02 006a |                   __|
0x00000099 03 005f |                  _|
0x000000cc 04 0059 | _________________|
EOF
ARGS=-n
CMDS=<<EOF
e zoom.in = block
p=e 5 0x100 1
EOF
RUN

NAME=p=p 5
FILE=../bins/elf/arm1.bin
EXPECT=<<EOF
0x00000000 00 0032 |''''''''''|
0x0001bec1 01 0031 |         |
0x00037d82 02 0035 |          |__
0x00053c43 03 0040 |            |__________
0x0006fb04 04 0076 | _______________________|
EOF
ARGS=-n
CMDS=<<EOF
p=p 5@0
EOF
RUN

NAME=p=p 5 0x100
FILE=../bins/elf/arm1.bin
EXPECT=<<EOF
0x00000000 00 0032 |'''''____|
0x00000033 01 0019 |    |
0x00000066 02 001e |     |
0x00000099 03 001e |     |_
0x000000cc 04 0028 | _______|
EOF
ARGS=-n
CMDS=<<EOF
e zoom.in = block
p=p 5 0x100
EOF
RUN

NAME=p=p 5 0x100 1
FILE=../bins/elf/arm1.bin
EXPECT=<<EOF
0x00000000 00 0019 |''''|
0x00000033 01 001e |     |
0x00000066 02 001e |     |_
0x00000099 03 0028 |      _|
0x000000cc 04 001e | _____|
EOF
ARGS=-n
CMDS=<<EOF
e zoom.in = block
p=p 5 0x100 1
EOF
RUN

NAME=p8 10
FILE=malloc://1024
EXPECT=<<EOF
90909090909090909090
EOF
CMDS=<<EOF
wx 90909090909090909090 ; p8 10
EOF
RUN

NAME=p8 -10
FILE=malloc://1024
EXPECT=<<EOF
90909090909090909090
EOF
CMDS=<<EOF
wx 90909090909090909090 ; s 10 ; p8 -10
EOF
RUN

NAME=pi 3
FILE=malloc://512
EXPECT=<<EOF
mov eax, 1
cmp rdx, rcx
jg 0xa
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx b8010000004839ca7f
pi 3
EOF
RUN

NAME=pij 3
FILE=malloc://512
EXPECT='[{"offset":0,"val":1,"esil":"1,rax,=","refptr":false,"fcn_addr":0,"fcn_last":0,"size":5,"opcode":"mov eax, 1","disasm":"mov eax, 1","bytes":"b801000000","family":"cpu","type":"mov","reloc":false,"type_num":9,"type2_num":0},{"offset":5,"esil":"rcx,rdx,==,$z,zf,=,$b64,cf,=,$p,pf,=,$s,sf,=,$o,of,=","refptr":false,"fcn_addr":0,"fcn_last":0,"size":3,"opcode":"cmp rdx, rcx","disasm":"cmp rdx, rcx","bytes":"4839ca","family":"cpu","type":"cmp","reloc":false,"type_num":15,"type2_num":0},{"offset":8,"esil":"sf,of,!,^,zf,!,&,?{,10,rip,=,}","refptr":false,"fcn_addr":0,"fcn_last":0,"size":2,"opcode":"jg 0xa","disasm":"jg 0xa","bytes":"7f00","family":"cpu","type":"cjmp","reloc":false,"type_num":2147483649,"type2_num":0,"jump":10,"fail":10}]
'
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx b8010000004839ca7f
pij 3
EOF
RUN

NAME=pi 6
FILE=malloc://512
EXPECT=<<EOF
mov eax, 1
cmp rdx, rcx
jg 0xa
mov eax, 1
cmp rdx, rcx
jg 0x14
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx b8010000004839ca7f00b8010000004839ca7f00
pi 6
EOF
RUN

NAME=pi -5 @ 0x0040050f
FILE=../bins/elf/analysis/main
EXPECT=<<EOF
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
mov edi, str.Hello_World
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
pi -5 @ 0x0040050f
EOF
RUN

NAME=pi -5 @ 0x0040050f (anal)
FILE=../bins/elf/analysis/main
EXPECT=<<EOF
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
mov edi, str.Hello_World
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
aaa
pi -5 @ 0x0040050f
EOF
RUN

NAME=pij -5 @ 0x0040050f
FILE=../bins/elf/analysis/main
EXPECT='[{"offset":4195590,"esil":"rbp,8,rsp,-,=[8],8,rsp,-=","refptr":false,"fcn_addr":0,"fcn_last":0,"size":1,"opcode":"push rbp","disasm":"push rbp","bytes":"55","family":"cpu","type":"upush","reloc":false,"type_num":12,"type2_num":0,"flags":["main","sym.main"]},{"offset":4195591,"esil":"rsp,rbp,=","refptr":false,"fcn_addr":0,"fcn_last":0,"size":3,"opcode":"mov rbp, rsp","disasm":"mov rbp, rsp","bytes":"4889e5","family":"cpu","type":"mov","reloc":false,"type_num":9,"type2_num":0},{"offset":4195594,"ptr":4195780,"val":4195780,"esil":"4195780,rdi,=","refptr":false,"fcn_addr":0,"fcn_last":0,"size":5,"opcode":"mov edi, 0x4005c4","disasm":"mov edi, str.Hello_World","bytes":"bfc4054000","family":"cpu","type":"mov","reloc":false,"type_num":9,"type2_num":0}]
'
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
pij -3 @ 0x0040050f
EOF
RUN

NAME=pi -5
FILE=../bins/elf/analysis/main
EXPECT=<<EOF
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
mov edi, str.Hello_World
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
s 0x0040050f
pi -5
EOF
RUN

NAME=pif bsz
FILE=malloc://1024
EXPECT=<<EOF
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx 5b415c415d415e415f5dc3
af
b 2
pif
EOF
RUN

NAME=pi~?
FILE=malloc://1024
EXPECT=<<EOF
200
200
200
EOF
CMDS=<<EOF
pi 200~?
pi 200~?
pd 200~?
EOF
RUN

NAME=tmpbits
FILE=-
EXPECT=<<EOF
00
64
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
p8 1 @b:32
e asm.bits
EOF
RUN

NAME=tmpbits
FILE=-
EXPECT=<<EOF
00
32
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=32
p8 1 @b:64
e asm.bits
EOF
RUN

NAME=pi 3
FILE=malloc://512
EXPECT=<<EOF
mov eax, 1
cmp rdx, rcx
jg 0xa
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx b8010000004839ca7f
pi 3
EOF
RUN

NAME=pij 3 (2)
FILE=malloc://512
EXPECT='[{"offset":0,"val":1,"esil":"1,rax,=","refptr":false,"fcn_addr":0,"fcn_last":0,"size":5,"opcode":"mov eax, 1","disasm":"mov eax, 1","bytes":"b801000000","family":"cpu","type":"mov","reloc":false,"type_num":9,"type2_num":0},{"offset":5,"esil":"rcx,rdx,==,$z,zf,=,$b64,cf,=,$p,pf,=,$s,sf,=,$o,of,=","refptr":false,"fcn_addr":0,"fcn_last":0,"size":3,"opcode":"cmp rdx, rcx","disasm":"cmp rdx, rcx","bytes":"4839ca","family":"cpu","type":"cmp","reloc":false,"type_num":15,"type2_num":0},{"offset":8,"esil":"sf,of,!,^,zf,!,&,?{,10,rip,=,}","refptr":false,"fcn_addr":0,"fcn_last":0,"size":2,"opcode":"jg 0xa","disasm":"jg 0xa","bytes":"7f00","family":"cpu","type":"cjmp","reloc":false,"type_num":2147483649,"type2_num":0,"jump":10,"fail":10}]
'
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx b8010000004839ca7f
pij 3
EOF
RUN

NAME=pi 6
FILE=malloc://512
EXPECT=<<EOF
mov eax, 1
cmp rdx, rcx
jg 0xa
mov eax, 1
cmp rdx, rcx
jg 0x14
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx b8010000004839ca7f00b8010000004839ca7f00
pi 6
EOF
RUN

NAME=pi -3 @ 3
FILE=malloc://512
EXPECT=<<EOF
add byte [rax], al
cmp rdx, rcx
jg 0xa
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx b8010000004839ca7f00
pi -3 @ 10
EOF
RUN

NAME=pij -3 @ 3
FILE=malloc://512
EXPECT='[
  {
    "offset": 3,
    "esil": "al,rax,+=[1],$o,of,=,$s,sf,=,$z,zf,=,$c7,cf,=,$p,pf,=",
    "refptr": false,
    "fcn_addr": 0,
    "fcn_last": 0,
    "size": 2,
    "opcode": "add byte [rax], al",
    "disasm": "add byte [rax], al",
    "bytes": "0000",
    "family": "cpu",
    "type": "add",
    "reloc": false,
    "type_num": 17,
    "type2_num": 0
  },
  {
    "offset": 5,
    "esil": "rcx,rdx,==,$z,zf,=,$b64,cf,=,$p,pf,=,$s,sf,=,$o,of,=",
    "refptr": false,
    "fcn_addr": 0,
    "fcn_last": 0,
    "size": 3,
    "opcode": "cmp rdx, rcx",
    "disasm": "cmp rdx, rcx",
    "bytes": "4839ca",
    "family": "cpu",
    "type": "cmp",
    "reloc": false,
    "type_num": 15,
    "type2_num": 0
  },
  {
    "offset": 8,
    "esil": "sf,of,!,^,zf,!,&,?{,10,rip,=,}",
    "refptr": false,
    "fcn_addr": 0,
    "fcn_last": 0,
    "size": 2,
    "opcode": "jg 0xa",
    "disasm": "jg 0xa",
    "bytes": "7f00",
    "family": "cpu",
    "type": "cjmp",
    "reloc": false,
    "type_num": 2147483649,
    "type2_num": 0,
    "jump": 10,
    "fail": 10
  }
]
'
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx b8010000004839ca7f00
pij -3 @ 10~{}
EOF
RUN

NAME=pi -10
FILE=malloc://1024
EXPECT=<<EOF
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
EOF
CMDS=<<EOF
wx 90909090909090909090 ; s 10 ; pi -10
EOF
RUN

NAME=pif bsz
FILE=malloc://1024
EXPECT=<<EOF
pop rbx
pop r12
pop r13
pop r14
pop r15
pop rbp
ret
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
wx 5b415c415d415e415f5dc3
af
b 2
pif
EOF
RUN

NAME=pi~?
FILE=malloc://1024
EXPECT=<<EOF
200
200
200
EOF
CMDS=<<EOF
pi 200~?
pi 200~?
pd 200~?
EOF
RUN

NAME=tmpbits
FILE=-
EXPECT=<<EOF
00
64
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
p8 1 @b:32
e asm.bits
EOF
RUN

NAME=tmpbits
FILE=-
EXPECT=<<EOF
00
32
EOF
CMDS=<<EOF
e asm.arch=x86
e asm.bits=32
p8 1 @b:64
e asm.bits
EOF
RUN

NAME=pm hello.c
FILE=../bins/src/hello.c
EXPECT=<<EOF
0x00000000 1 C source code
EOF
CMDS=<<EOF
pm
EOF
RUN

NAME=pm elf/main
FILE=../bins/elf/analysis/main
EXPECT=<<EOF
0x00000000 1 ELF 64-bit LSB executable, x86-64, version 1
EOF
ARGS=-n
CMDS=<<EOF
pm
EOF
RUN

NAME=pm mach0/fatmach0-3true
FILE=../bins/mach0/fatmach0-3true
EXPECT=<<EOF
0x00000000 1 Fat-Mach-O
EOF
ARGS=-n
CMDS=<<EOF
pm
EOF
RUN

NAME=pm java/Hello.class
FILE=../bins/java/Hello.class
EXPECT=<<EOF
0x00000000 1 Java CLASS
EOF
ARGS=-n
CMDS=<<EOF
pm
EOF
RUN

NAME=pm pe/a.exe
FILE=../bins/pe/a.exe
EXPECT=<<EOF
0x00000000 1 PE  for MS Windows (console) Intel 80386 32-bit
EOF
ARGS=-n
CMDS=<<EOF
pm
EOF
RUN

NAME=print raw lines
FILE=../bins/other/projects/resetc64
EXPECT=<<EOF
+1
5
EOF
CMDS=<<EOF
sl 5
prl 1~[0]
e lines.abs=true
prl 1~[0]
EOF
RUN

NAME=pib from begining of bb
FILE=../bins/elf/analysis/x64-loop
EXPECT=<<EOF
push rbp
mov rbp, rsp
sub rsp, 0x20
mov dword [rbp - 0x14], edi
mov qword [rbp - 0x20], rsi
mov dword [rbp - 4], 0
jmp 0x400523
EOF
CMDS=<<EOF
s main
af
pib
EOF
RUN

NAME=pib inside bb
FILE=../bins/elf/analysis/x64-loop
EXPECT=<<EOF
sub rsp, 0x20
mov dword [rbp - 0x14], edi
mov qword [rbp - 0x20], rsi
mov dword [rbp - 4], 0
jmp 0x400523
EOF
CMDS=<<EOF
s main
af
so 2
pib
EOF
RUN

NAME=pI size > bocksize
FILE=malloc://1024
EXPECT=<<EOF
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
EOF
CMDS=<<EOF
wx 90909090909090909090
b 1
pI 10
EOF
RUN

NAME=p- with "r2 --"
FILE=--
EXPECT=<<EOF
EOF
CMDS=<<EOF
p-
EOF
RUN

NAME=p- with malloc://512
FILE=malloc://512
EXPECT=<<EOF
0x00000000 [^_____________________________________________] 0x00000200
EOF
CMDS=<<EOF
p-
EOF
RUN

NAME=psW 32 widestring
FILE=../bins/elf/crackme0x00b
EXPECT=<<EOF
w0wgreat
EOF
CMDS=<<EOF
psW @ obj.pass.1964
EOF
RUN

NAME=psW 32 widestring leading zeros
FILE=../bins/elf/crackme0x00b
EXPECT=<<EOF
w0wgreat
EOF
CMDS=<<EOF
psW @ 0x0804a03e
EOF
RUN

NAME=ps leading zeros
BROKEN=1
FILE=../bins/elf/crackme0x00b
EXPECT=<<EOF
w
EOF
CMDS=<<EOF
ps @ 0x0804a03e
EOF
RUN

NAME=io.unalloc, io.unalloc.ch and prc
FILE=../bins/elf/analysis/tiny.elf
CMDS=<<EXPECT
(print, prc 0x00010032-0x0000fffa @ 0x0000fffa)
e io.unalloc=true
e scr.color=0
.(print)
?e
e scr.color=3
e io.unalloc.ch=
.(print)
?e
e io.unalloc.ch=?
.(print)
EXPECT=<<RUN
0x0000fffa ????????????se,,,,,,                                ..  
0x00010016     ..              en....OO,,OO;;  ..  ..    ??????????

[38;2;0;255;0m0x0000fffa[0m [0m..[0m..[0m..[0m..[0m..[0m..[38;2;240;240;240m[48;2;149;254;184m[38;2;240;240;240mse[38;2;240;240;240m[48;2;103;155;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;192;255;67m[38;2;240;240;240m  [38;2;240;240;240m[48;2;117;176;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;100;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;117;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;76;57;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [0m
[38;2;0;255;0m0x00010016[0m [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;76;57;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;135;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;29;117m[38;2;240;240;240men[38;2;240;240;240m[48;2;255;195;15m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;86;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;25;0;76m[38;2;240;240;240m  [38;2;240;240;240m[48;2;50;76;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;147;94;255m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;76;76m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;135;135;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;76;57;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [0m..[0m..[0m..[0m..[0m..[0m

[38;2;0;255;0m0x0000fffa[0m [0m??[0m??[0m??[0m??[0m??[0m??[38;2;240;240;240m[48;2;149;254;184m[38;2;240;240;240mse[38;2;240;240;240m[48;2;103;155;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;192;255;67m[38;2;240;240;240m  [38;2;240;240;240m[48;2;117;176;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;100;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;117;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;76;57;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [0m
[38;2;0;255;0m0x00010016[0m [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;76;57;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;135;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;29;117m[38;2;240;240;240men[38;2;240;240;240m[48;2;255;195;15m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;86;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;25;0;76m[38;2;240;240;240m  [38;2;240;240;240m[48;2;50;76;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;147;94;255m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;76;76m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;135;135;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;76;57;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;0;0;0m[38;2;240;240;240m  [38;2;240;240;240m[48;2;86;0;0m[38;2;240;240;240m  [0m??[0m??[0m??[0m??[0m??[0m
RUN
