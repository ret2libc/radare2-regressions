#!/bin/sh

# GPL 3+ - Copyright (C) 2013-2016  pancake, Alex Kornitzer

for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done
F0=../../bins/mdmp/calc.dmp
F1=../../bins/mdmp/hello.dmp
F2=../../bins/mdmp/hello64.dmp

unset R2_NOPLUGINS

# Functional Tests

NAME="${PLUGIN}: open"
FILE=$F0
ARGS=
CMDS='i~format
'
EXPECT='format   mdmp
'
run_test


NAME="${PLUGIN}: info"
FILE=$F0
ARGS=
CMDS='iI
'
EXPECT='arch     x86
binsz    36724
bintype  mdmp
bits     64
canary   false
crypto   false
endian   little
flags    0x00040000
havecode true
hdr.csum 0x00000000
linenum  false
lsyms    false
machine  AMD64
maxopsz  16
minopsz  1
nx       false
os       Windows NT Workstation 6.1.7601
pcalign  0
pic      false
relocs   false
rpath    NONE
static   true
streams  13
stripped false
va       true
'
run_test


NAME="${PLUGIN}: sections"
FILE=$F0
ARGS=
CMDS='iS~calc
'
EXPECT='09 0x00000000 929792 0xfffe0000 929792 ---- C:_Windows_System32_calc.exe
'
run_test


NAME="${PLUGIN}: entrypoints nomem .dmp"
FILE=$F0
ARGS=
CMDS='ie
'
EXPECT='[Entrypoints]

0 entrypoints
'
run_test


NAME="${PLUGIN}: resolve vaddr to paddr"
FILE=$F1
ARGS=
CMDS='px 64 @ 0x00400000
'
EXPECT='- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF
0x00400000  4d5a 9000 0300 0000 0400 0000 ffff 0000  MZ..............
0x00400010  b800 0000 0000 0000 4000 0000 0000 0000  ........@.......
0x00400020  0000 0000 0000 0000 0000 0000 0000 0000  ................
0x00400030  0000 0000 0000 0000 0000 0000 8000 0000  ................
'
run_test


NAME="${PLUGIN}: test format definitions"
FILE=$F1
ARGS='-nn'
CMDS='pf.
'
EXPECT='pf.mdmp_memory_descriptor q? StartOfMemoryRange (mdmp_location_descriptor)Memory
pf.mdmp_misc_info d[4]Bdtttddddd SizeOfInfo (mdmp_misc1_flags)Flags1 ProcessId ProcessCreateTime ProcessUserTime ProcessKernelTime ProcessorMaxMhz ProcessorCurrentMhz ProcessorMhzLimit ProcessorMaxIdleState ProcessorCurrentIdleState
pf.mdmp_thread_list d[1]? NumberOfThreads (mdmp_thread)Threads
pf.mdmp_module qddtd???qq BaseOfImage SizeOfImage CheckSum TimeDateStamp ModuleNameRVA (mdmp_vs_fixedfileinfo)VersionInfo (mdmp_location_descriptor)CvRecord (mdmp_location_descriptor)MiscRecord Reserved0 Reserved1
pf.mdmp_system_info [2]EwwbBddd[4]Ed[2]Ew[2]q (mdmp_processor_architecture)ProcessorArchitecture ProcessorLevel ProcessorRevision NumberOfProcessors (mdmp_product_type)ProductType MajorVersion MinorVersion BuildNumber (mdmp_platform_id)PlatformId CsdVersionRva (mdmp_suite_mask)SuiteMask Reserved2 ProcessorFeatures
pf.mdmp_exception [4]E[4]Eqqdd[15]q (mdmp_exception_code)ExceptionCode (mdmp_exception_flags)ExceptionFlags ExceptionRecord ExceptionAddress NumberParameters __UnusedAlignment ExceptionInformation
pf.mdmp_module_list d[10]? NumberOfModule (mdmp_module)Modules
pf.mdmp_location_descriptor dd DataSize RVA
pf.mdmp_string dZ Length Buffer
pf.mdmp_memory64_list qq[83]? NumberOfMemoryRanges BaseRva (mdmp_memory_descriptor64)MemoryRanges
pf.mdmp_vs_fixedfileinfo ddddddddddddd dwSignature dwStrucVersion dwFileVersionMs dwFileVersionLs dwProductVersionMs dwProductVersionLs dwFileFlagsMask dwFileFlags dwFileOs dwFileType dwFileSubtype dwFileDateMs dwFileDateLs
pf.mdmp_location_descriptor64 qq DataSize RVA
pf.mdmp_header [4]zddddt[8]B Signature Version NumberOfStreams StreamDirectoryRVA CheckSum TimeDateStamp (mdmp_type)Flags
pf.mdmp_exception_stream dd?? ThreadId __Alignment (mdmp_exception)ExceptionRecord (mdmp_location_descriptor)ThreadContext
pf.mdmp_memory_descriptor64 qq StartOfMemoryRange DataSize
pf.mdmp_directory [4]E? (mdmp_stream_type)StreamType (mdmp_location_descriptor)Location
pf.mdmp_memory_info qq[4]Edq[4]E[4]E[4]Ed BaseAddress AllocationBase (mdmp_page_protect)AllocationProtect __Alignment1 RegionSize (mdmp_mem_state)State (mdmp_page_protect)Protect (mdmp_mem_type)Type __Alignment2
pf.mdmp_thread ddddq?? ThreadId SuspendCount PriorityClass Priority Teb (mdmp_memory_descriptor)Stack (mdmp_location_descriptor)ThreadContext
pf.mdmp_memory_info_list ddq[127]? SizeOfHeader SizeOfEntry NumberOfEntries (mdmp_memory_info)MemoryInfo
'
run_test


NAME="${PLUGIN}: 32bit - libraries count"
FILE=$F1
ARGS=
CMDS='il~libraries
'
EXPECT='[Linked libraries]
57 libraries
'
run_test


NAME="${PLUGIN}: 32bit - libraries resolving"
FILE=$F1
ARGS=
CMDS='il~kernel32.dll
'
EXPECT='[0x00400000] - kernel32.dll
'
run_test


NAME="${PLUGIN}: 32bit - entrypoints count"
FILE=$F1
ARGS=
CMDS='ie~entrypoints
iee~entrypoints
'
EXPECT='9 entrypoints
2 entrypoints
'
run_test


NAME="${PLUGIN}: 32bit - entrypoints resolving"
FILE=$F1
ARGS=
CMDS='ie~0x004014e0
'
EXPECT='vaddr=0x004014e0 paddr=0x000990b2 baddr=0x00000000 laddr=0x00000000 haddr=0x00097c7a type=program
'
run_test


# NOTE: Will break if pdb parsing is implemented, therefore not a regression
NAME="${PLUGIN}: 32bit - symbols count"
FILE=$F1
ARGS=
CMDS='is~?
'
EXPECT='7467
'
run_test


NAME="${PLUGIN}: 32bit - symbols resolving 1"
FILE=$F1
ARGS=
CMDS='is~imp.KERNEL32.dll_DeleteCriticalSection:0
'
EXPECT='001 0x0009dcda 0x00406108   NONE   FUNC    0 imp.KERNEL32.dll_DeleteCriticalSection
'
run_test


NAME="${PLUGIN}: 32bit - symbols resolving 2"
FILE=$F1
ARGS=
CMDS='is~ntdll.dll_RtlDeleteCriticalSection:0
'
EXPECT='358 0x001c2176 0x76fb05a4   NONE   FUNC    0 imp.ntdll.dll_RtlDeleteCriticalSection
'
run_test


NAME="${PLUGIN}: 32bit - imports count"
FILE=$F1
ARGS=
CMDS='ii~?
'
EXPECT='2029
'
run_test


NAME="${PLUGIN}: 32bit - imports resolving"
FILE=$F1
ARGS=
CMDS='ii~KERNEL32.dll_TerminateProcess
'
EXPECT='  17 0x00406148    NONE    FUNC KERNEL32.dll_TerminateProcess
'
run_test


NAME="${PLUGIN}: 32bit - exports count"
FILE=$F1
ARGS=
CMDS='iE~?
'
EXPECT='5439
'
run_test


NAME="${PLUGIN}: 32bit - exports resolving"
FILE=$F1
ARGS=
CMDS='iE~ntdll.dll_Ordinal_1
'
EXPECT='1992 0x0041f1f2 0x77802620 GLOBAL   FUNC    0 ntdll.dll_Ordinal_1
'
run_test


NAME="${PLUGIN}: 32bit - relocs count"
FILE=$F1
ARGS=
CMDS='ir~relocations
'
EXPECT='2028 relocations
'
run_test


NAME="${PLUGIN}: 32bit - relocs resolving"
FILE=$F1
ARGS=
CMDS='ir~msvcrt.dll___dllonexit
'
EXPECT='vaddr=0x00406160 paddr=0x0009dd32 type=SET_32 msvcrt.dll___dllonexit
'
run_test


NAME="${PLUGIN}: 32bit - relocs following"
FILE=$F1
ARGS=
CMDS='pd 12 @[0x004061cc]
'
EXPECT='            ;-- msvcrt.dll_vfprintf:
            0x773e7430      8bff           mov edi, edi
            0x773e7432      55             push rbp
            0x773e7433      8bec           mov ebp, esp
            0x773e7435      ff7510         push qword [rbp + 0x10]
            0x773e7438      6a00           push 0
            0x773e743a      ff750c         push qword [rbp + 0xc]
            0x773e743d      ff7508         push qword [rbp + 8]
            0x773e7440      68fdcc3777     push 0x7737ccfd
            0x773e7445      e800feffff     call 0x773e724a
            0x773e744a      83c414         add esp, 0x14
            0x773e744d      5d             pop rbp
            0x773e744e      c3             ret
'
run_test


NAME="${PLUGIN}: 64bit - libraries count"
FILE=$F2
ARGS=
CMDS='il~libraries
'
EXPECT='[Linked libraries]
49 libraries
'
run_test


NAME="${PLUGIN}: 64bit - libraries resolving"
FILE=$F2
ARGS=
CMDS='il~kernel32.dll
'
EXPECT='[0x00400000] - kernel32.dll
'
run_test


NAME="${PLUGIN}: 64bit - entrypoints count"
FILE=$F2
ARGS=
CMDS='ie~entrypoints
'
EXPECT='5 entrypoints
'
run_test


NAME="${PLUGIN}: 64bit - entrypoints resolving"
FILE=$F2
ARGS=
CMDS='ie~0x00401500
'
EXPECT='vaddr=0x00401500 paddr=0x0009418f baddr=0x00000000 laddr=0x00000000 haddr=0x00092d37 type=program
'
run_test


# NOTE: Will break if pdb parsing is implemented, therefore not a regression
NAME="${PLUGIN}: 64bit - symbols count"
FILE=$F2
ARGS=
CMDS='is~?
'
EXPECT='6825
'
run_test


NAME="${PLUGIN}: 64bit - symbols resolving 1"
FILE=$F2
ARGS=
CMDS='is~imp.KERNEL32.dll_DeleteCriticalSection
'
EXPECT='001 0x0009ae8b 0x004081fc   NONE   FUNC    0 imp.KERNEL32.dll_DeleteCriticalSection
'
run_test


NAME="${PLUGIN}: 64bit - symbols resolving 2"
FILE=$F2
ARGS=
CMDS='is~ntdll.dll_A_SHAFinal
'
EXPECT='008 0x001eb87f 0x77728bf0 GLOBAL   FUNC    0 ntdll.dll_A_SHAFinal
'
run_test


NAME="${PLUGIN}: 64bit - imports count"
FILE=$F2
ARGS=
CMDS='ii~?
'
EXPECT='1510
'
run_test


NAME="${PLUGIN}: 64bit - imports resolving"
FILE=$F2
ARGS=
CMDS='ii~KERNEL32.dll_GetCurrentProcessId
'
EXPECT='   4 0x00408214    NONE    FUNC KERNEL32.dll_GetCurrentProcessId
'
run_test


NAME="${PLUGIN}: 64bit - exports count"
FILE=$F2
ARGS=
CMDS='iE~?
'
EXPECT='5316
'
run_test


NAME="${PLUGIN}: 64bit - exports resolving"
FILE=$F2
ARGS=
CMDS='iE~ntdll.dll_CsrVerifyRegion
'
EXPECT='038 0x0029513f 0x777d24b0 GLOBAL   FUNC    0 ntdll.dll_CsrVerifyRegion
'
run_test


NAME="${PLUGIN}: 64bit - relocs count"
FILE=$F2
ARGS=
CMDS='ir~relocations
'
EXPECT='1509 relocations
'
run_test


NAME="${PLUGIN}: 64bit - relocs resolving"
FILE=$F2
ARGS=
CMDS='ir~KERNEL32.dll_DeleteCriticalSection
'
EXPECT='vaddr=0x004081fc paddr=0x0009ae8b type=SET_64 KERNEL32.dll_DeleteCriticalSection
'
run_test


NAME="${PLUGIN}: 64bit - relocs following"
FILE=$F2
ARGS=
CMDS='pd 9 @[0x004083ac]
'
EXPECT="            ;-- msvcrt.dll_vfprintf:
            0x7fefdb0a1a4      4883ec38       sub rsp, 0x38            ; '8'
            0x7fefdb0a1a8      4c89442420     mov qword [rsp + 0x20], r8
            0x7fefdb0a1ad      4c8bc2         mov r8, rdx
            0x7fefdb0a1b0      488bd1         mov rdx, rcx
            0x7fefdb0a1b3      488d0dea7ffa.  lea rcx, [0x7fefdab21a4]
            0x7fefdb0a1ba      4533c9         xor r9d, r9d
            0x7fefdb0a1bd      e87efdffff     call 0x7fefdb09f40
            0x7fefdb0a1c2      4883c438       add rsp, 0x38            ; '8'
            0x7fefdb0a1c6      c3             ret
"
run_test


# Bug tests

NAME="${PLUGIN}: reload file"
IGNORE_ERR=1
BROKEN=
FILE=$F0
ARGS=
CMDS='ib
?e ok
'
EXPECT='ok
'
run_test
