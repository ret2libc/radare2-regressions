#!/bin/sh

for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

NAME="load 16 bits omf"
FILE=../../bins/omf/hello_world
ARGS=''
BROKEN=
CMDS="iI~bits"
EXPECT='bits     16
'
run_test

NAME="entry point 16 bits omf"
FILE=../../bins/omf/hello_world
ARGS=''
BROKEN=
CMDS="ie~addr"
EXPECT='vaddr=0x00001000 paddr=0x00000073 baddr=0x00001000 laddr=0x00000000 haddr=-1 type=program
'
run_test

NAME="symbols 16 bits omf"
FILE=../../bins/omf/hello_world
ARGS=''
BROKEN=
CMDS="is"
EXPECT='[Symbols]
001 0x00000073 0x00001000 (null) (null)    0 _start
'
run_test

NAME="sections 16 bits omf"
FILE=../../bins/omf/hello_world
ARGS=''
BROKEN=
CMDS="iS"
EXPECT='[Sections]
00 0x00000073    19 0x00001000    19 -rwx text_1
01 0x00000095    14 0x00001013    14 -rwx data_1
'
run_test

NAME="sections 16 bits omf - content"
FILE=../../bins/omf/hello_world
ARGS=''
BROKEN=
CMDS="px 16 @ section.text_1; px 16 @ section.data_1"
EXPECT='- offset -  0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF
0000:1000  ba0e 00b9 0000 bb01 00b8 0400 cd80 b801  ................
- offset -  0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF
0000:1013  4865 6c6c 6f2c 2077 6f72 6c64 210a ffff  Hello, world!...
'
run_test

NAME="virtual address 16 bits omf"
FILE=../../bins/omf/hello_world
ARGS=''
BROKEN=
CMDS="pid 1~mov[1]"
EXPECT='ba0e00
'
run_test

NAME="load 32 bits omf"
FILE=../../bins/omf/hello_world32
ARGS=''
BROKEN=
CMDS="iI~bits"
EXPECT='bits     32
'
run_test

NAME="entry point 32 bits omf"
FILE=../../bins/omf/hello_world32
ARGS=''
BROKEN=
CMDS="ie~addr"
EXPECT='vaddr=0x00001000 paddr=0x00000074 baddr=0x00001000 laddr=0x00000000 haddr=-1 type=program
'
run_test

NAME="symbols 32 bits omf"
FILE=../../bins/omf/hello_world32
ARGS=''
BROKEN=
CMDS="is"
EXPECT='[Symbols]
001 0x00000074 0x00001000 (null) (null)    0 _start
'
run_test

NAME="sections 32 bits omf"
FILE=../../bins/omf/hello_world32
ARGS=''
BROKEN=
CMDS="iS"
EXPECT='[Sections]
00 0x00000074    29 0x00001000    29 -rwx .text_1
01 0x000000a3    14 0x0000101d    14 -rwx .data_1
'
run_test

NAME="virtual address 32 bits omf"
FILE=../../bins/omf/hello_world32
ARGS=''
BROKEN=
CMDS="pid 1~mov[1]"
EXPECT='ba0e000000
'
run_test

NAME="multiple symbols omf"
FILE=../../bins/omf/multi_pubdef
ARGS=''
BROKEN=
CMDS="is"
EXPECT='[Symbols]
001 0x00000084 0x00001000 (null) (null)    0 _start
002 0x00000097 0x00001013 (null) (null)    0 second_symbol
'
run_test

NAME="null checksum omf"
FILE=../../bins/omf/null_checks
ARGS=''
BROKEN=
CMDS="is"
EXPECT='[Symbols]
001 0x00000073 0x00001000 (null) (null)    0 _start
'
run_test

NAME="invalide index segment omf"
FILE=../../bins/omf/invalid_idx
ARGS=''
BROKEN=
CMDS="q!"
EXPECT=''
run_test

NAME="invalide string size pubdef record omf"
FILE=../../bins/omf/invalid_str_pubdef
ARGS=''
BROKEN=
CMDS="q!"
EXPECT=''
run_test

NAME="invalide string size lnames record omf"
FILE=../../bins/omf/invalid_str_lname
ARGS=''
BROKEN=
CMDS="q!"
EXPECT=''
run_test

NAME="invalide record size omf"
FILE=../../bins/omf/invalid_size
ARGS=''
BROKEN=
CMDS="q!"
EXPECT=''
run_test
