#!/bin/sh
for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh && break ; done

NAME='x86 - init_array detection'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='aa;afl~0x080482e0[3]
'
EXPECT='loc.imp.__gmon_start
'
run_test

NAME='x86 - init_array detection'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='iS~init_array
'
EXPECT='18 0x0000059c     4 0x0804959c     4 --rw- .init_array
'
run_test

NAME='metadata'
BROKEN=
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='C
'
EXPECT='0x00000000 CCu "[37] m-rw- section size 0 named GNU_STACK"
0x08048000 CCu "[38] m-rw- section size 52 named ehdr"
0x08048034 CCu "[30] m-r-x section size 256 named PHDR"
0x08048134 CCu "[31] m-r-- section size 19 named INTERP"
0x08048148 CCu "[35] m-r-- section size 68 named NOTE"
0x08048168 CCu "[03] --r-- section size 36 named .note.gnu.build_id"
0x0804818c CCu "[04] --r-- section size 32 named .gnu.hash"
0x080481ac CCu "[05] --r-- section size 80 named .dynsym"
0x080481fc CCu "[06] --r-- section size 74 named .dynstr"
0x08048246 CCu "[07] --r-- section size 10 named .gnu.version"
0x08048250 CCu "[08] --r-- section size 32 named .gnu.version_r"
0x08048270 CCu "[09] --r-- section size 8 named .rel.dyn"
0x08048278 CCu "[10] --r-- section size 24 named .rel.plt"
0x08048290 CCu "[11] --r-x section size 35 named .init"
0x080482c0 CCu "[12] --r-x section size 64 named .plt"
0x08048300 CCu "[13] --r-x section size 404 named .text"
0x08048494 CCu "[14] --r-x section size 20 named .fini"
0x080484a8 CCu "[15] --r-- section size 21 named .rodata"
0x080484c0 CCu "[36] m-r-- section size 44 named GNU_EH_FRAME"
0x080484ec CCu "[17] --r-- section size 176 named .eh_frame"
0x0804959c CCu "[33] m-rw- section size 280 named LOAD1"
0x080495a0 CCu "[19] --rw- section size 4 named .fini_array"
0x080495a4 CCu "[20] --rw- section size 4 named .jcr"
0x080495a8 CCu "[34] m-rw- section size 232 named DYNAMIC"
0x08049690 CCu "[22] --rw- section size 4 named .got"
0x08049694 CCu "[23] --rw- section size 24 named .got.plt"
0x080496ac CCu "[24] --rw- section size 8 named .data"
0x080496b4 CCu "[25] --rw- section size 0 named .bss"
0x08049690 data Cd 4
0x080496a0 data Cd 4
0x080496a4 data Cd 4
0x080496a8 data Cd 4
0x080484b0 ascii[13] "Hello world!"
'
run_test

NAME='base64 metadata commands'
BROKEN=
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='C*
'
EXPECT='CCu base64:WzM3XSBtLXJ3LSBzZWN0aW9uIHNpemUgMCBuYW1lZCBHTlVfU1RBQ0s= @ 0x00000000
CCu base64:WzM4XSBtLXJ3LSBzZWN0aW9uIHNpemUgNTIgbmFtZWQgZWhkcg== @ 0x08048000
CCu base64:WzMwXSBtLXIteCBzZWN0aW9uIHNpemUgMjU2IG5hbWVkIFBIRFI= @ 0x08048034
CCu base64:WzMxXSBtLXItLSBzZWN0aW9uIHNpemUgMTkgbmFtZWQgSU5URVJQ @ 0x08048134
CCu base64:WzM1XSBtLXItLSBzZWN0aW9uIHNpemUgNjggbmFtZWQgTk9URQ== @ 0x08048148
CCu base64:WzAzXSAtLXItLSBzZWN0aW9uIHNpemUgMzYgbmFtZWQgLm5vdGUuZ251LmJ1aWxkX2lk @ 0x08048168
CCu base64:WzA0XSAtLXItLSBzZWN0aW9uIHNpemUgMzIgbmFtZWQgLmdudS5oYXNo @ 0x0804818c
CCu base64:WzA1XSAtLXItLSBzZWN0aW9uIHNpemUgODAgbmFtZWQgLmR5bnN5bQ== @ 0x080481ac
CCu base64:WzA2XSAtLXItLSBzZWN0aW9uIHNpemUgNzQgbmFtZWQgLmR5bnN0cg== @ 0x080481fc
CCu base64:WzA3XSAtLXItLSBzZWN0aW9uIHNpemUgMTAgbmFtZWQgLmdudS52ZXJzaW9u @ 0x08048246
CCu base64:WzA4XSAtLXItLSBzZWN0aW9uIHNpemUgMzIgbmFtZWQgLmdudS52ZXJzaW9uX3I= @ 0x08048250
CCu base64:WzA5XSAtLXItLSBzZWN0aW9uIHNpemUgOCBuYW1lZCAucmVsLmR5bg== @ 0x08048270
CCu base64:WzEwXSAtLXItLSBzZWN0aW9uIHNpemUgMjQgbmFtZWQgLnJlbC5wbHQ= @ 0x08048278
CCu base64:WzExXSAtLXIteCBzZWN0aW9uIHNpemUgMzUgbmFtZWQgLmluaXQ= @ 0x08048290
CCu base64:WzEyXSAtLXIteCBzZWN0aW9uIHNpemUgNjQgbmFtZWQgLnBsdA== @ 0x080482c0
CCu base64:WzEzXSAtLXIteCBzZWN0aW9uIHNpemUgNDA0IG5hbWVkIC50ZXh0 @ 0x08048300
CCu base64:WzE0XSAtLXIteCBzZWN0aW9uIHNpemUgMjAgbmFtZWQgLmZpbmk= @ 0x08048494
CCu base64:WzE1XSAtLXItLSBzZWN0aW9uIHNpemUgMjEgbmFtZWQgLnJvZGF0YQ== @ 0x080484a8
CCu base64:WzM2XSBtLXItLSBzZWN0aW9uIHNpemUgNDQgbmFtZWQgR05VX0VIX0ZSQU1F @ 0x080484c0
CCu base64:WzE3XSAtLXItLSBzZWN0aW9uIHNpemUgMTc2IG5hbWVkIC5laF9mcmFtZQ== @ 0x080484ec
CCu base64:WzMzXSBtLXJ3LSBzZWN0aW9uIHNpemUgMjgwIG5hbWVkIExPQUQx @ 0x0804959c
CCu base64:WzE5XSAtLXJ3LSBzZWN0aW9uIHNpemUgNCBuYW1lZCAuZmluaV9hcnJheQ== @ 0x080495a0
CCu base64:WzIwXSAtLXJ3LSBzZWN0aW9uIHNpemUgNCBuYW1lZCAuamNy @ 0x080495a4
CCu base64:WzM0XSBtLXJ3LSBzZWN0aW9uIHNpemUgMjMyIG5hbWVkIERZTkFNSUM= @ 0x080495a8
CCu base64:WzIyXSAtLXJ3LSBzZWN0aW9uIHNpemUgNCBuYW1lZCAuZ290 @ 0x08049690
CCu base64:WzIzXSAtLXJ3LSBzZWN0aW9uIHNpemUgMjQgbmFtZWQgLmdvdC5wbHQ= @ 0x08049694
CCu base64:WzI0XSAtLXJ3LSBzZWN0aW9uIHNpemUgOCBuYW1lZCAuZGF0YQ== @ 0x080496ac
CCu base64:WzI1XSAtLXJ3LSBzZWN0aW9uIHNpemUgMCBuYW1lZCAuYnNz @ 0x080496b4
Cd 4 @ 0x08049690
Cd 4 @ 0x080496a0
Cd 4 @ 0x080496a4
Cd 4 @ 0x080496a8
Cs 13 @ 0x080484b0 # Hello world!
'
run_test

NAME='flags spaces'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='fs
'
EXPECT='0    1 * strings
1   34 * symbols
2   78 * sections
3    3 * relocs
4    3 * imports
'
run_test

NAME='flags spaces after analysis'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='
aa;fs *;fs
afl~?
'
EXPECT='0    1 * strings
1   34 * symbols
2   78 * sections
3    3 * relocs
4    3 * imports
5    0 * functions
14
'
run_test

NAME='flags spaces after analysis'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='s entry0+4; af;fs *;fs
'
EXPECT='0    1 * strings
1   34 * symbols
2   78 * sections
3    3 * relocs
4    3 * imports
5    1 * functions
'
run_test

NAME='pb 4'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='pb 4
'
EXPECT='0011
'
run_test

NAME='pxW 10'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='pxW 10
'
EXPECT='0x08048300 0x895eed31
0x08048304 0xf0e483e1
'
run_test

NAME='p-'
# this test is subject to fail in many situations. it's too generalistic, needs
# to be splitted down into something more unitary to identify what's wrong
#BROKEN=0
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='p-
'
EXPECT='0x8048000 [sc_______ss_s__s_sss.ss^sss_ss_ss__sz_s____] 0x804859c
'
run_test

NAME='pu 10'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='pu 10
'
EXPECT='%31%ed%5e%89%e1%83%e4%f0%50%54
'
run_test

NAME='pdn 10'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='e scr.color = 0
pDi 10
'
EXPECT='0x08048300    sym._start:
0x08048300                 31ed  xor ebp, ebp
0x08048302                   5e  pop esi
0x08048303                 89e1  mov ecx, esp
0x08048305               83e4f0  and esp, 0xfffffff0
0x08048308                   50  push eax
0x08048309                   54  push esp
'
run_test

NAME='pi 12'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='pi 12
'
EXPECT='xor ebp, ebp
pop esi
mov ecx, esp
and esp, 0xfffffff0
push eax
push esp
push edx
push sym.__libc_csu_fini
push sym.__libc_csu_init
push ecx
push esi
push sym.main
'
run_test


NAME='pc C'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='pc
'
EXPECT='#define _BUFFER_SIZE 256
const uint8_t buffer[256] = {
  0x31, 0xed, 0x5e, 0x89, 0xe1, 0x83, 0xe4, 0xf0, 0x50, 0x54,
  0x52, 0x68, 0x90, 0x84, 0x04, 0x08, 0x68, 0x20, 0x84, 0x04,
  0x08, 0x51, 0x56, 0x68, 0x00, 0x84, 0x04, 0x08, 0xe8, 0xcf,
  0xff, 0xff, 0xff, 0xf4, 0x66, 0x90, 0x66, 0x90, 0x66, 0x90,
  0x66, 0x90, 0x66, 0x90, 0x66, 0x90, 0x66, 0x90, 0x8b, 0x1c,
  0x24, 0xc3, 0x66, 0x90, 0x66, 0x90, 0x66, 0x90, 0x66, 0x90,
  0x66, 0x90, 0x66, 0x90, 0xb8, 0xb7, 0x96, 0x04, 0x08, 0x2d,
  0xb4, 0x96, 0x04, 0x08, 0x83, 0xf8, 0x06, 0x77, 0x01, 0xc3,
  0xb8, 0x00, 0x00, 0x00, 0x00, 0x85, 0xc0, 0x74, 0xf6, 0x55,
  0x89, 0xe5, 0x83, 0xec, 0x18, 0xc7, 0x04, 0x24, 0xb4, 0x96,
  0x04, 0x08, 0xff, 0xd0, 0xc9, 0xc3, 0x8d, 0xb6, 0x00, 0x00,
  0x00, 0x00, 0xb8, 0xb4, 0x96, 0x04, 0x08, 0x2d, 0xb4, 0x96,
  0x04, 0x08, 0xc1, 0xf8, 0x02, 0x89, 0xc2, 0xc1, 0xea, 0x1f,
  0x01, 0xd0, 0xd1, 0xf8, 0x75, 0x01, 0xc3, 0xba, 0x00, 0x00,
  0x00, 0x00, 0x85, 0xd2, 0x74, 0xf6, 0x55, 0x89, 0xe5, 0x83,
  0xec, 0x18, 0x89, 0x44, 0x24, 0x04, 0xc7, 0x04, 0x24, 0xb4,
  0x96, 0x04, 0x08, 0xff, 0xd2, 0xc9, 0xc3, 0x89, 0xf6, 0x8d,
  0xbc, 0x27, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3d, 0xb4, 0x96,
  0x04, 0x08, 0x00, 0x75, 0x13, 0x55, 0x89, 0xe5, 0x83, 0xec,
  0x08, 0xe8, 0x7c, 0xff, 0xff, 0xff, 0xc6, 0x05, 0xb4, 0x96,
  0x04, 0x08, 0x01, 0xc9, 0xf3, 0xc3, 0x66, 0x90, 0xa1, 0xa4,
  0x95, 0x04, 0x08, 0x85, 0xc0, 0x74, 0x1f, 0xb8, 0x00, 0x00,
  0x00, 0x00, 0x85, 0xc0, 0x74, 0x16, 0x55, 0x89, 0xe5, 0x83,
  0xec, 0x18, 0xc7, 0x04, 0x24, 0xa4, 0x95, 0x04, 0x08, 0xff,
  0xd0, 0xc9, 0xe9, 0x79, 0xff, 0xff, 0xff, 0x90, 0xe9, 0x73,
  0xff, 0xff, 0xff, 0x66, 0x90, 0x90
};
'
run_test


NAME='flags (total)'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='f~?
'
EXPECT='119
'
run_test

NAME='flags'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='f
'
EXPECT='0x080484b0 13 str.Hello_world
0x08048400 256 main
0x08048300 1 entry0
0x080483d0 1 entry1.init
0x080483b0 1 entry2.fini
0x00000000 0 section.
0x00000000 0 section_end.
0x08048134 19 section..interp
0x08048147 0 section_end..interp
0x08048148 32 section..note.ABI_tag
0x08048168 0 section_end..note.ABI_tag
0x08048168 36 section..note.gnu.build_id
0x0804818c 0 section_end..note.gnu.build_id
0x0804818c 32 section..gnu.hash
0x080481ac 0 section_end..gnu.hash
0x080481ac 80 section..dynsym
0x080481fc 0 section_end..dynsym
0x080481fc 74 section..dynstr
0x08048246 0 section_end..dynstr
0x08048246 10 section..gnu.version
0x08048250 0 section_end..gnu.version
0x08048250 32 section..gnu.version_r
0x08048270 0 section_end..gnu.version_r
0x08048270 8 section..rel.dyn
0x08048278 0 section_end..rel.dyn
0x08048278 24 section..rel.plt
0x08048290 0 section_end..rel.plt
0x08048290 35 section..init
0x080482b3 0 section_end..init
0x080482c0 64 section..plt
0x08048300 0 section_end..plt
0x08048300 404 section..text
0x08048494 0 section_end..text
0x08048494 20 section..fini
0x080484a8 0 section_end..fini
0x080484a8 21 section..rodata
0x080484bd 0 section_end..rodata
0x080484c0 44 section..eh_frame_hdr
0x080484ec 0 section_end..eh_frame_hdr
0x080484ec 176 section..eh_frame
0x0804859c 0 section_end..eh_frame
0x0804959c 4 section..init_array
0x080495a0 0 section_end..init_array
0x080495a0 4 section..fini_array
0x080495a4 0 section_end..fini_array
0x080495a4 4 section..jcr
0x080495a8 0 section_end..jcr
0x080495a8 232 section..dynamic
0x08049690 0 section_end..dynamic
0x08049690 4 section..got
0x08049694 0 section_end..got
0x08049694 24 section..got.plt
0x080496ac 0 section_end..got.plt
0x080496ac 8 section..data
0x080496b4 0 section_end..data
0x080496b4 0 section..bss
0x080496b8 0 section_end..bss
0x00000000 17 section..comment
0x00000011 0 section_end..comment
0x00000000 262 section..shstrtab
0x00000106 0 section_end..shstrtab
0x00000000 1104 section..symtab
0x00000450 0 section_end..symtab
0x00000000 599 section..strtab
0x00000257 0 section_end..strtab
0x08048034 256 section.PHDR
0x08048134 0 section_end.PHDR
0x08048134 19 section.INTERP
0x08048147 0 section_end.INTERP
0x08048000 1436 section.LOAD0
0x0804859c 0 section_end.LOAD0
0x0804959c 280 section.LOAD1
0x080496b8 0 section_end.LOAD1
0x080495a8 232 section.DYNAMIC
0x08049690 0 section_end.DYNAMIC
0x08048148 68 section.NOTE
0x0804818c 0 section_end.NOTE
0x080484c0 44 section.GNU_EH_FRAME
0x080484ec 0 section_end.GNU_EH_FRAME
0x00000000 0 section.GNU_STACK
0x00000000 0 section_end.GNU_STACK
0x08048000 52 section.ehdr
0x08048034 0 section_end.ehdr
0x080496a4 4 reloc.__gmon_start
0x080496a0 4 reloc.puts
0x080496a8 4 reloc.__libc_start_main
0x080495a4 0 obj.__JCR_LIST
0x08048340 0 sym.deregister_tm_clones
0x08048370 0 sym.register_tm_clones
0x080483b0 0 sym.__do_global_dtors_aux
0x080496b4 1 obj.completed.5979
0x080495a0 0 obj.__do_global_dtors_aux_fini_array_entry
0x080483d0 0 sym.frame_dummy
0x0804959c 0 obj.__frame_dummy_init_array_entry
0x08048598 0 obj.__FRAME_END
0x080495a4 0 obj.__JCR_END
0x080495a0 0 loc.__init_array_end
0x080495a8 0 obj._DYNAMIC
0x0804959c 0 loc.__init_array_start
0x08049694 0 obj._GLOBAL_OFFSET_TABLE
0x08048490 2 sym.__libc_csu_fini
0x08048330 4 sym.__x86.get_pc_thunk.bx
0x080496ac 0 loc.data_start
0x080496b4 0 loc._edata
0x08048494 0 sym._fini
0x080496ac 0 loc.__data_start
0x080496b0 0 obj.__dso_handle
0x080484ac 4 obj._IO_stdin_used
0x08048420 97 sym.__libc_csu_init
0x080496b8 0 loc._end
0x08048300 0 sym._start
0x080484a8 4 obj._fp_hw
0x080496b4 0 loc.__bss_start
0x08048400 28 sym.main
0x080496b4 0 obj.__TMC_END
0x08048290 0 sym._init
0x080482d0 16 sym.imp.puts
0x080482e0 16 loc.imp.__gmon_start
0x080482f0 16 sym.imp.__libc_start_main
'
run_test

# that ?e is a hack to workaround the missing trailing newline in pdj
NAME='x86 - pdj 4'
FILE=../../bins/elf/analysis/x86-helloworld-gcc
CMDS='pdj 4~{}
?e
'
EXPECT='[
  {
    "offset": 134513408,
    "esil": "ebp,ebp,^=,$z,zf,=,$p,pf,=,$s,sf,=,$0,cf,=,$0,of,=",
    "refptr": false,
    "fcn_addr": 0,
    "fcn_last": 0,
    "size": 2,
    "opcode": "xor ebp, ebp",
    "disasm": "xor ebp, ebp",
    "bytes": "31ed",
    "family": "cpu",
    "type": "xor",
    "type_num": 28,
    "type2_num": 0,
    "flags": [
      "entry0",
      "section_end..plt",
      "section..text",
      "sym._start"
    ],
    "comment": "WzEzXSAtLXIteCBzZWN0aW9uIHNpemUgNDA0IG5hbWVkIC50ZXh0"
  },
  {
    "offset": 134513410,
    "esil": "esp,[4],esi,=,4,esp,+=",
    "refptr": false,
    "fcn_addr": 0,
    "fcn_last": 0,
    "size": 1,
    "opcode": "pop esi",
    "disasm": "pop esi",
    "bytes": "5e",
    "family": "cpu",
    "type": "pop",
    "type_num": 14,
    "type2_num": 0
  },
  {
    "offset": 134513411,
    "esil": "esp,ecx,=",
    "refptr": false,
    "fcn_addr": 0,
    "fcn_last": 0,
    "size": 2,
    "opcode": "mov ecx, esp",
    "disasm": "mov ecx, esp",
    "bytes": "89e1",
    "family": "cpu",
    "type": "mov",
    "type_num": 9,
    "type2_num": 0
  },
  {
    "offset": 134513413,
    "esil": "4294967280,esp,&=,$0,of,=,$0,cf,=,$z,zf,=,$s,sf,=,$o,pf,=",
    "refptr": false,
    "fcn_addr": 0,
    "fcn_last": 0,
    "size": 3,
    "opcode": "and esp, 0xfffffff0",
    "disasm": "and esp, 0xfffffff0",
    "bytes": "83e4f0",
    "family": "cpu",
    "type": "and",
    "type_num": 27,
    "type2_num": 0
  }
]


'
run_test
